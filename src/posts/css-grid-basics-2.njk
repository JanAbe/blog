---
name: "css-grid-basics-2"
title: "Basics of css grid (2)"
description: "Learn how to use grid-template-areas to create a page layout"
date: 2024-02-13
layout: "layouts/blog.njk"
templateEngineOverride: njk, md
---

<h2 id="our-goal">Our goal</h2>

We want to create a simple page layout using css grid that looks like the image below.

<img src="/images/css-grid-basics/simple-layout.png" alt="Simple page layout">

<h2 id="grid-area-templates">Grid area templates</h2>

This is a great use case for <mark class="highlight">grid-template-areas</mark>.
Using this property you can create areas within a grid and give them names which you can later reference.

So that is exactly what we are going to do.

In the picture there are four different colours denoting four different areas. So let's use grid-template-areas to create four areas.

{% highlight "css" %}
display: grid;
grid-template-areas:
    "header header header header"
    "aside main main main"
    "footer footer footer footer";
{% endhighlight %}

Now we have created different named areas, let's reference them and assign them to an html element.
{% highlight "css" %}
.my-header {
    grid-area: header;
}
{% endhighlight %}
We assigned the html element with a class of "my-header" to live in the grid area named "header".

Do the same for the other elements.

You can also set the size of a grid area using <mark class="highlight">grid-template-rows</mark> and <mark class="highlight">grid-template-columns</mark>

We can for example give our header (first row) and footer (third row) a size of 1 fraction and our main + aside (second row) a size of 4 fractions.
```css
grid-template-rows: 1fr 4fr 1fr;
```

{% set demoTitle %}End result{% endset %}
{% set description %}
This is what the end result looks like.
{% endset %}

{% set html %}
<div class="my-page-layout">
  <header class="my-header">
  </header>

  <aside class="my-aside">
  </aside>

  <main class="my-main">
  </main>

  <footer class="my-footer">
  </footer>
</div>
{% endset %}

{% set css %}
.my-page-layout {
    min-height: 30vh;
    display: grid;
    grid-template-areas:
        "header header header header"
        "aside main main main"
        "footer footer footer footer";
    grid-template-rows: 1fr 4fr 1fr;
}

.my-header {
    background-color: orange;
    grid-area: header;
}

.my-aside {
    background-color: green;
    grid-area: aside;
}

.my-main {
    background-color: mediumpurple;
    grid-area: main;
}

.my-footer {
    background-color: dodgerblue;
    grid-area: footer;
}
{% endset %}

{% include "partials/codeDemo.njk" %}